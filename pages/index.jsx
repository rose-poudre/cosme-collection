import Head from "next/head";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import { db } from "../public/src/firebase-config";
import { collection, getDocs } from "firebase/firestore";
import Header from "../components/Header";
import Banner from "../components/Banner";
import MediumCard from "../components/MediumCard";
import Footer from "../components/Footer";
import SkinTroubleCard from "../components/SkinTroubleCard";
import ChooseBrand from "../components/ChooseBrand";
import ChooseCategorySmall from "../components/ChooseCategorySmall";
import TopBottomBanner from "../components/TopBottomBanner";
import ChooseActiveIngredientName from "../components/ChooseActiveIngredientName";

const Index = ({ searchResult, cardsData }) => {
  const router = useRouter();
  const { brand } = router.query;

  const [skintroubles, setSkintroubles] = useState([]);
  const skinTroublesCollectionRef = collection(db, "skinTroubles");

  const [products, setProducts] = useState([]);
  const productsCollectionRef = collection(db, "products");

  useEffect(() => {
    const getSkintroubles = async () => {
      let skintroubledata = await getDocs(skinTroublesCollectionRef);

      let trouble = skintroubledata.docs.map((doc) => ({
        ...doc.data(),
        id: doc.id,
      }));

      if (brand) {
        trouble = trouble.filter((output, index) => {
          return output.brand.includes(trouble);
        });
      }
      setSkintroubles(trouble);
    };
    getSkintroubles();
  }, []);
  // console.log(products);

  useEffect(() => {
    const getProducts = async () => {
      let data = await getDocs(productsCollectionRef);

      let product = data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));

      if (brand) {
        product = product.filter((output, index) => {
          return output.brand.includes(brand);
        });
      }
      setProducts(product);
    };
    getProducts();
  }, []);

  // export default function Home({ exploreData, cardsData }) {
  return (
    <div className="">
      <Head>
        <title>Rikejo Cosme</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <ProductCard /> */}
      <Header />
      <Banner />
      {/* <PriceCard /> */}

      <main className="max-w-7xl mx-auto px-8 sm:px-16">
        <section className="pt-6">
          <h2 className="text-4xl font-semibold pd-5">肌のお悩み</h2>

          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
            {skintroubles?.map(({ img, trouble }) => (
              <SkinTroubleCard key={img} img={img} trouble={trouble} />
            ))}
          </div>
        </section>

        <section>
          <h2 className="text-4xl font-semibold py-8">注目の商品</h2>
          <div className="flex space-x-3 overflow-scroll scrollbar-hide p-3 -ml-3">
            {products?.map(
              ({
                img,
                product,
                brand,
                categorySmall,
                activeIngredientName,
              }) => (
                <MediumCard
                  key={img}
                  img={img}
                  product={product}
                  brand={brand}
                  categorySmall={categorySmall}
                  activeIngredientName={activeIngredientName}
                />
              )
            )}
          </div>
        </section>
        <section>
          <h2 className="text-4xl font-semibold py-8">ブランドから探す</h2>
          <div className="hidden lg:inline-flex mb-5 space-x-3 text-gray-800 whitespace-nowrap"></div>
          <ChooseBrand />
        </section>
        <section>
          <h2 className="text-4xl font-semibold py-8">カテゴリから探す</h2>
          <div className="hidden lg:inline-flex mb-5 space-x-3 text-gray-800 whitespace-nowrap"></div>
          <ChooseCategorySmall />
        </section>
        <section>
          <h2 className="text-4xl font-semibold py-8">有効成分から探す</h2>
          <div className="hidden lg:inline-flex mb-5 space-x-3 text-gray-800 whitespace-nowrap"></div>
          <ChooseActiveIngredientName />
        </section>
        <TopBottomBanner
          img="https://firebasestorage.googleapis.com/v0/b/rikejo-cosme.appspot.com/o/cosmetics-topbg.jpg?alt=media&token=d5556641-eaf3-4793-98e1-4bdbac2995ff"
          title="What's the difference?"
          description="気になる商品を並べて比較"
          buttonText="Click"
        />
      </main>
      <Footer />
    </div>
  );
};

export default Index;

import Head from "next/head";
import Header from "../components/Header";
import Footer from "../components/Footer";
import { useRouter } from "next/router";
import { format } from "date-fns";
// import InfoCard from "../components/InfoCard";
import { useState, useEffect } from "react";
import { db } from "../public/src/firebase-config";
import { collection, getDocs } from "firebase/firestore";
import FirebaseCard from "../components/FirebaseCard";

const Productlist = ({ searchResult }) => {
  const router = useRouter();

  // console.log(searchResult);
  const { location, startDate, endDate, noOfGuests, brand } = router.query;

  // const formattedStartDate = format(new Date(startDate), "dd MMMM yy");
  // const formattedEndDate = format(new Date(endDate), "dd MMMM yy");
  // const range = `${formattedStartDate} - ${formattedEndDate}`;

  const [products, setProducts] = useState([]);
  const productsCollectionRef = collection(db, "products");

  useEffect(() => {
    const getProducts = async () => {
      const data = await getDocs(productsCollectionRef);
      console.log(data);
      console.log(brand);

      let product = data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));
      if (brand) {
        product = product.filter((output, index) => {
          return output.brand.includes(brand);
        });
      }
      setProducts(product);
    };
    getProducts();
    // console.log(product);
    // const filterProduct = product.filter((output, index) => {
    //   return output.brand.includes(brand);
    // });
    // setProducts(filterProduct);
  }, []);
  console.log(products);

  return (
    <div>
      {/* <Header placeholder={`${brand} | ${range} | ${noOfGuests} guests`} />
      <Header placeholder={`${brand} | ${noOfGuests} guests`} /> */}

      <Head>
        <title>Rikejo Cosme</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <ProductCard /> */}
      <Header />

      <main className="flex">
        <section className="flex-grow pt-14 px-6">
          {/* <p className="text-tx">
            300+ Stays - {range}- for {noOfGuests} guests
          </p> */}

          <h1 className="text-3xl font-semibold mt-2 mb-6">
            「{brand}」 を含む検索結果
          </h1>

          <div className="hidden sm:inline-flex mb-5 space-x-3 text-gray-800 whitespace-nowrap">
            <p className="button">化粧水</p>
            <p href="" className="button">
              アクアレーベル
            </p>
            <p className="button">トゥベール</p>
            <p className="button">乳液</p>
            <p className="button">スキンケア</p>
          </div>

          <div className="flex flex-col">
            {products.map(
              ({
                img,
                manufacture,
                brand,
                product,
                category,
                price,
                capacity,
                unit,
                star_point,
              }) => (
                <FirebaseCard
                  key={img}
                  img={img}
                  manufacture={manufacture}
                  brand={brand}
                  category={category}
                  age={brand}
                  product={product}
                  price={price}
                  capacity={capacity}
                  unit={unit}
                  star_point={star_point}
                />
              )
            )}
          </div>
        </section>
      </main>
      <Footer />
    </div>
  );
};

export default Productlist;

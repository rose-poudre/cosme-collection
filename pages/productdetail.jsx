import Head from "next/head";
import Header from "../components/Header";
import Footer from "../components/Footer";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import { db } from "../public/src/firebase-config";
import { collection, getDocs } from "firebase/firestore";
import ProductDetailCard from "../components/ProductDetailCard";
import ChooseBrand from "../components/ChooseBrand";
import SameIngredientRecommendationCard from "../components/SameIngredientRecommendationCard";
import { data } from "autoprefixer";

const Productdetail = ({ searchResult }) => {
  const router = useRouter();
  const { img, activeIngredientName } = router.query;

  const [products, setProducts] = useState([]);
  const [recommendProducts, setRecommendedProducts] = useState([]);

  const productsCollectionRef = collection(db, "products");

  useEffect(() => {
    const getProducts = async () => {
      const data = await getDocs(productsCollectionRef);

      let product = data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));
      if (img) {
        product = product.filter((output, index) => {
          return output.img.includes(img);
        });
      }
      setProducts(product);
    };
    getProducts();
  }, [router.query.img]);
  console.log(products);
  console.log(productsCollectionRef);

  useEffect(() => {
    const getRecommendedProducts = async () => {
      const recommendedData = await getDocs(productsCollectionRef);

      let recommendedProduct = recommendedData.docs.map((doc) => ({
        ...doc.data(),
        id: doc.id,
      }));
      console.log(recommendedProduct);
      if (activeIngredientName) {
        recommendedProduct = recommendedProduct.filter((output, index) => {
          return output.activeIngredientName.includes(activeIngredientName);
        });
      }
      setRecommendedProducts(recommendedProduct);
    };
    getRecommendedProducts();
  }, [router.query.activeIngredientName]);
  console.log(recommendProducts);
  console.log(productsCollectionRef);

  return (
    <div>
      <Head>
        <title>Rikejo Cosme</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <ProductCard /> */}
      <Header />

      <main className="">
        <section className="flex-grow pt-14 px-6">
          <h1 className="text-3xl font-semibold mt-2 mb-6"></h1>

          <div className="hidden sm:inline-flex mb-5 space-x-3 text-gray-800 whitespace-nowrap">
            <ChooseBrand />
          </div>

          <div className="flex flex-col">
            {products.map(
              ({
                img,
                manufacture,
                brand,
                product,
                activeIngredientName,
                allIngredientName,
                categorySmall,
                price,
                capacity,
                unit,
                star_point,
              }) => (
                <ProductDetailCard
                  key={img}
                  img={img}
                  manufacture={manufacture}
                  brand={brand}
                  activeIngredientName={activeIngredientName}
                  allIngredientName={allIngredientName}
                  categorySmall={categorySmall}
                  product={product}
                  price={price}
                  capacity={capacity}
                  unit={unit}
                  star_point={star_point}
                />
              )
            )}
          </div>
        </section>
        <section class="flex-grow pt-14 px-6">
          <h2 className="text-2xl font-semibold py-8">
            「{activeIngredientName}」を含む商品
          </h2>
          <div className="grid grid-cols-3 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-4 xl:grid-cols-6 p-3 -ml-3">
            {recommendProducts.map(
              ({
                img,
                product,
                brand,
                categorySmall,
                activeIngredientName,
              }) => (
                <SameIngredientRecommendationCard
                  key={img}
                  img={img}
                  product={product}
                  brand={brand}
                  categorySmall={categorySmall}
                  activeIngredientName={activeIngredientName}
                />
              )
            )}
          </div>
        </section>
      </main>
      <Footer />
    </div>
  );
};

export default Productdetail;
